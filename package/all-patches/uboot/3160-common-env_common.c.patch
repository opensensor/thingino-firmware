
--- a/common/env_common.c	2013-07-23 07:58:13.000000000 -0400
+++ b/common/env_common.c	2023-07-26 11:31:38.000000000 -0400
@@ -112,6 +112,44 @@
 	gd->flags = real_gd_flags;
 	return ret_val;
 }
+#ifdef CONFIG_JZ_SLT
+void slt_uart_mode(void) {
+#if defined(GPIO_UART_RX) && defined(GPIO_UART_TX)
+	int test_uart_as_gpio = 0;
+	int start = 0;
+	char *env = NULL;
+	int size;
+	gpio_direction_output(GPIO_UART_TX , 1);
+	gpio_direction_input(GPIO_UART_RX);
+	if (gpio_get_value(GPIO_UART_RX)) {
+		gpio_direction_output(GPIO_UART_TX , 0);
+		if (!gpio_get_value(GPIO_UART_RX)) {
+			test_uart_as_gpio = 1;
+		}
+	}
+	gpio_set_func(gpio_port_gp(GPIO_UART_RX), GPIO_UART_RX_FUNC,
+			(1 << gpio_pin(GPIO_UART_RX)));
+	gpio_set_func(gpio_port_gp(GPIO_UART_TX), GPIO_UART_TX_FUNC,
+			(1 << gpio_pin(GPIO_UART_TX)));
+
+	if (test_uart_as_gpio) {
+		for (env = default_environment, size = sizeof(default_environment);
+				start < size;
+				start += (strlen(env) + 1), env += (strlen(env) + 1)) {
+			if (!!strstr(env, "bootargs")) {
+				if (!!(env = strstr(env, "console"))) {
+					for (;*env !=  ' ' && *env != '\0'; env++) {
+						*env = ' ';
+					}
+				}
+				break;
+			}
+		}
+	}
+	return;
+#endif
+}
+#endif
 
 void set_default_env(const char *s)
 {
@@ -122,6 +160,10 @@
 		return;
 	}
 
+#ifdef CONFIG_JZ_SLT
+	slt_uart_mode();
+#endif
+
 	if (s) {
 		if (*s == '!') {
 			printf("*** Warning - %s, "
