
--- a/include/mmc.h	2013-07-23 07:58:13.000000000 -0400
+++ b/include/mmc.h	2023-07-26 11:31:38.000000000 -0400
@@ -130,6 +130,8 @@
 
 #define MMC_STATE_PRG		(7 << 9)
 
+#define MMC_CSD_PERM_WRITE_PROTECT  (1 << 13)
+
 #define MMC_VDD_165_195		0x00000080	/* VDD voltage 1.65 - 1.95 */
 #define MMC_VDD_20_21		0x00000100	/* VDD voltage 2.0 ~ 2.1 */
 #define MMC_VDD_21_22		0x00000200	/* VDD voltage 2.1 ~ 2.2 */
@@ -308,6 +310,11 @@
 int mmc_register(struct mmc *mmc);
 int mmc_initialize(bd_t *bis);
 int mmc_init(struct mmc *mmc);
+int mmc_send_cmd(struct mmc *mmc, struct mmc_cmd *cmd, struct mmc_data *data);
+int mmc_send_status(struct mmc *mmc, int timeout);
+int mmc_switch(struct mmc *mmc, u8 set, u8 index, u8 value);
+void mmc_set_bus_width(struct mmc *mmc, uint width);
+int mmc_set_blocklen(struct mmc *mmc, int len);
 int mmc_read(struct mmc *mmc, u64 src, uchar *dst, int size);
 void mmc_set_clock(struct mmc *mmc, uint clock);
 struct mmc *find_mmc_device(int dev_num);
@@ -351,7 +358,11 @@
 void mmc_set_preinit(struct mmc *mmc, int preinit);
 
 #ifdef CONFIG_GENERIC_MMC
+#ifdef CONFIG_MMC_SPI
 #define mmc_host_is_spi(mmc)	((mmc)->host_caps & MMC_MODE_SPI)
+#else
+#define mmc_host_is_spi(mmc)	0
+#endif
 struct mmc *mmc_spi_init(uint bus, uint cs, uint speed, uint mode);
 #else
 int mmc_legacy_init(int verbose);
