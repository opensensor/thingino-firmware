
--- a/arch/mips/cpu/xburst/jz_serial.c	2013-07-23 07:58:13.000000000 -0400
+++ b/arch/mips/cpu/xburst/jz_serial.c	2023-07-26 11:31:37.000000000 -0400
@@ -21,11 +21,15 @@
 
 #include <config.h>
 #include <common.h>
-#include <asm/io.h>
-#include <asm/jz4740.h>
 #include <serial.h>
 #include <linux/compiler.h>
 
+#include <asm/io.h>
+#include <asm/jz_uart.h>
+#include <asm/arch/base.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
 /*
  * serial_init - initialize a channel
  *
@@ -35,10 +39,17 @@
  *
  * RETURNS: N/A
  */
-struct jz4740_uart *uart = (struct jz4740_uart *)CONFIG_SYS_UART_BASE;
+
+struct jz_uart *uart __attribute__ ((section(".data")));
 
 static int jz_serial_init(void)
 {
+#ifdef CONFIG_BURNER
+	uart = (struct jz_uart *)(UART0_BASE + gd->arch.gi->uart_idx * 0x1000);
+#else
+	uart = (struct jz_uart *)(UART0_BASE + CONFIG_SYS_UART_INDEX * 0x1000);
+#endif
+
 	/* Disable port interrupts while changing hardware */
 	writeb(0, &uart->dlhr_ier);
 
@@ -67,9 +78,17 @@
 static void jz_serial_setbrg(void)
 {
 	u32 baud_div, tmp;
-
+#ifdef CONFIG_BURNER
+	baud_div = gd->arch.gi->extal / 16 / gd->arch.gi->baud_rate;
+#else
 	baud_div = CONFIG_SYS_EXTAL / 16 / CONFIG_BAUDRATE;
+#endif
 
+#ifdef CONFIG_PALLADIUM
+	writel(32,0xb0030024);
+	writel(0,0xb0030028);
+	baud_div = 1;
+#endif
 	tmp = readb(&uart->lcr);
 	tmp |= UART_LCR_DLAB;
 	writeb(tmp, &uart->lcr);
@@ -94,11 +113,11 @@
 	if (c == '\n')
 		serial_putc('\r');
 
+	writeb((u8)c, &uart->rbr_thr_dllr);
+
 	/* Wait for fifo to shift out some bytes */
 	while (!((readb(&uart->lsr) & (UART_LSR_TDRQ | UART_LSR_TEMT)) == 0x60))
 		;
-
-	writeb((u8)c, &uart->rbr_thr_dllr);
 }
 
 static int jz_serial_getc(void)
